#include <stdio.h>

#define MAX_CANDIDATOS 50
#define MAX_NOME 100

typedef struct {
    char nome[MAX_NOME];
    float PE[4];
    float AC[5];
    float PP[10];
    float EB[3];
    float notaFinal;
} Candidato;

void removerNovaLinha(char *str) {
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] == '\n') {
            str[i] = '\0';
            break;
        }
    }
}

void lerNotas(float notas[], int tamanho, char *descricao) {
    printf("Digite as %d notas para %s: ", tamanho, descricao);
    for (int i = 0; i < tamanho; i++) {
        scanf("%f", &notas[i]);
    }
}

float calcularNota(float notas[], int tamanho) {
    float soma = 0.0, maior = notas[0], menor = notas[0];
    for (int i = 0; i < tamanho; i++) {
        soma += notas[i];
        if (notas[i] > maior) maior = notas[i];
        if (notas[i] < menor) menor = notas[i];
    }
    return (soma - maior - menor) / (tamanho - 2);
}

void calcularNotaFinal(Candidato *c) {
    float PE = calcularNota(c->PE, 4);
    float AC = calcularNota(c->AC, 5);
    float PP = calcularNota(c->PP, 10);
    float EB = calcularNota(c->EB, 3);
    c->notaFinal = (PE * 0.3) + (AC * 0.1) + (PP * 0.4) + (EB * 0.2);
}

void ordenarCandidatos(Candidato candidatos[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (candidatos[j].notaFinal < candidatos[j + 1].notaFinal) {
                Candidato temp = candidatos[j];
                candidatos[j] = candidatos[j + 1];
                candidatos[j + 1] = temp;
            }
        }
    }
}

int main() {
    Candidato candidatos[MAX_CANDIDATOS];
    int n;

    printf("Digite o número de candidatos (máximo %d): ", MAX_CANDIDATOS);
    scanf("%d", &n);
    getchar(); // Consome o \n pendente

    for (int i = 0; i < n; i++) {
        printf("\nDigite o nome do candidato %d: ", i + 1);
        fgets(candidatos[i].nome, MAX_NOME, stdin);
        removerNovaLinha(candidatos[i].nome);
        
        lerNotas(candidatos[i].PE, 4, "Prova Escrita (PE)");
        lerNotas(candidatos[i].AC, 5, "Análise Curricular (AC)");
        lerNotas(candidatos[i].PP, 10, "Prova Prática (PP)");
        lerNotas(candidatos[i].EB, 3, "Entrevista em Banca (EB)");
        
        calcularNotaFinal(&candidatos[i]);
    }

    ordenarCandidatos(candidatos, n);
    printf("\nClassificação dos 15 melhores candidatos:\n");
    for (int i = 0; i < (n < 15 ? n : 15); i++) {
        printf("%d. %s - Nota Final: %.2f\n", i + 1, candidatos[i].nome, candidatos[i].notaFinal);
    }
    return 0;
}